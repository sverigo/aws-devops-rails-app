AWSTemplateFormatVersion: 2010-09-09

Description: "CloudFormation template for Rails application"

#Parameters:
#  DbAllocatedStorage:
#    Default: '20'
#    Description: "The size of the database (Gb)"
#    Type: Number
#    MinValue: '20'
#    MaxValue: '20'
#    ConstraintDescription: "Must to be 20 Gb"
#
#  DbInstanceClass:
#   Default: db.t2.micro
#    Description: "The database instance type"
#    Type: String
#    AllowedValues:
#      - db.t2.micro
#    ConstraintDescription: "Must select a valid database instance type"
#
#  DbInstanceMasterPassword:

Parameters:
  DbInstanceMasterPassword:
    NoEcho: true
    Description: The database admin account password
    Type: String


Mappings:
  AWSRegion2AMI:
    us-west-2:
      AMI: ami-ba602bc2

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Rails VPC

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: VPC

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - '0'
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Rails Public Subnet 1

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - '1'
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Rails Public Subnet 2

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select
        - '0'
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Rails Private Subnet 1

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select
        - '1'
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Rails Private Subnet 2

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn:
      - VPC
      - AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Rails Public Route Table

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - VPC
      - AttachGateway
      - PublicRouteTable
      - InternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicRouteTable
      - PublicSubnet1
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicRouteTable
      - PublicSubnet2
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Rails Private Route Table

  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateRouteTable
      - PrivateSubnet1
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateRouteTable
      - PrivateSubnet2
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  CodeDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'codedeploy.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Path: '/'

  Application:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: 'rails-application'

  DeploymentConfig:
    Type: 'AWS::CodeDeploy::DeploymentConfig'
    Properties:
      MinimumHealthyHosts:
        Type: HOST_COUNT
        Value: '0'

  DeploymentGroup:
    Type: 'AWS::CodeDeploy::DeploymentGroup'
    Properties:
      ApplicationName: !Ref Application
      DeploymentConfigName: !Ref DeploymentConfig
      DeploymentGroupName: 'rails-deployment-group'
      Ec2TagFilters:
        - Key: codedeploy-instance
          Value: rails-server
          Type: KEY_AND_VALUE
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn

  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: VPC
    Properties:
      GroupDescription: 'HTTP access'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Rails web security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  DbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - VPC
      - WebSecurityGroup
    Properties:
      GroupDescription: 'Database access'
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Rails db security group
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        SourceSecurityGroupId: !Ref WebSecurityGroup

  DbSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    DependsOn: 
      - PrivateSubnet1
      - PrivateSubnet2
    Properties:
      DBSubnetGroupDescription: 'Rails db subnet group'
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  DbInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: "db.t2.micro"
      Engine: "postgres"
      MasterUsername: root
      MasterUserPassword: !Ref DbInstanceMasterPassword
      MultiAZ: 'false'
      DBSubnetGroupName: !Ref DbSubnetGroup
      VPCSecurityGroups:
        - !Ref DbSecurityGroup
      Tags:
        - Key: Name
          Value: rails-db

  RootRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

  RootInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - 
          Ref: "RootRole"

  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId: !FindInMap [ AWSRegion2AMI, !Ref "AWS::Region", AMI ]
      InstanceType: t2.micro
      KeyName: 'smartlingpc-keys'
      NetworkInterfaces:
        - DeviceIndex: '0'
          AssociatePublicIpAddress: 'true'
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: "rails-server"
        - Key: codedeploy-instance
          Value: "rails-server"

Outputs:
  RDSAddress:
    Description: The hostname for the RDS Instance
    Value: !GetAtt DbInstance.Endpoint.Address

  WebServerInstanceId:
    Description: The webserver instance id
    Value: !Ref WebServerInstance